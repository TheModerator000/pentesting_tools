beginning(){
clear
# Reset
Color_Off='\033[0m'       # Text Reset

# Regular Colors
Black='\033[0;30m'        # Black
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
Purple='\033[0;35m'       # Purple
Cyan='\033[0;36m'         # Cyan
White='\033[0;37m'        # White

# Routine checks!
scriptname="ScannerFix v1.0"
show_startmenus
read_startoptions
}



infosetup(){
clear
beginning
}

infosetupNEW(){
clear
scriptdisplay
echo
echo
echo What is the client\s name?
read varname
clear
echo $scriptname
echo
echo
echo
echo
mkdir "$USERLOGGEDIN/Desktop/Projects/$varname/"
projectdir="$USERLOGGEDIN/Desktop/Projects/$varname"
clear
pripsone
}

	# service menu
startmenu(){
	show_startmenus
	read_startoptions
	}
	
	# function to display menus
show_startmenus() {
	clear
	echo "~~~~~~~~~~~~~~~~~~~~~~~~~"	
	echo " $scriptname"
	echo " $varname"
	echo "~~~~~~~~~~~~~~~~~~~~~~~~~"
	echo "1. Setup Scanner"
	echo "2. Remove Testing Tools"
	echo "3. Exit"
}

# read input from the keyboard and take a action
# invoke the one() when the user select 1 from the menu option.
# invoke the two() when the user select 2 from the menu option.
# Exit when user the user select 3 form the menu option.
read_startoptions(){
	local choice
	read -p "Enter choice [ 1 - 3] " choice
	case $choice in
		1) prereqs ;;
		2) testingtoolremoval ;;
		3) exit 0;;
		*) echo -e "${RED}Error...${STD}" && sleep 2
	esac
}

testingtoolremoval(){
clear
echo "Removing Testing Tools!"
echo
echo
rm -rf /home/tsadmin/Python-3.7.4/impacket/mitm6/Responder/
rm /usr/local/bin/mitm6
rm /usr/local/bin/ntlmrelayx.py
}

prereqs(){
clear
echo "Installing pentest requirements!"
cd /home/tsadmin/
sudo apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libsqlite3-dev libreadline-dev libffi-dev wget libbz2-dev -y
sudo wget https://www.python.org/ftp/python/3.7.4/Python-3.7.4.tgz --no-check-certificate
sudo tar -xf Python-3.7.4.tgz
cd /home/tsadmin/Python-3.7.4/
sudo ./configure --enable-optimizations
sudo make -j 8
sudo make altinstall
echo
echo
echo
echo "Installing scanner dependencies!"
sudo apt-get install git -y
sudo apt-get install python3 -y
sudo apt-get install python3-pip -y
sudo apt-get install proxychains -y
echo
echo
echo
echo "Updating PIP and other stuff"
sudo pip3.7 install --upgrade pip
pip3.7 install netifaces
pip3.7 install twisted
pip3.7 install scapy
pip3.7 install impacket
echo
echo 
echo 
echo "Installing impacket"
sudo git clone https://github.com/SecureAuthCorp/impacket
cd impacket
sudo python3.7 setup.py install
echo
echo 
echo
echo  "Installing mitm6"
sudo git clone https://github.com/fox-it/mitm6
cd mitm6
sudo python3.7 setup.py install
echo
echo
echo
echo  "Installing Responder"
sudo git clone https://github.com/SpiderLabs/Responder.git
echo
echo
echo
echo  "The MAGIC IS COMPLETE!" 
}




#!/bin/bash
# A menu driven shell script sample template 
## ----------------------------------
# Step #1: Define variables
# ----------------------------------
EDITOR=vim
PASSWD=/etc/passwd
RED='\033[0;41;30m'
STD='\033[0;0;39m'
 
# ----------------------------------
# Step #2: User defined function
# ----------------------------------
pause(){
  read -p "Press [Enter] key to continue..." fackEnterKey
}


#header display for pages
scriptdisplay(){
echo "~~~~~~~~~~~~~~~~~~~~~~~~~"	
echo " $scriptname"
echo "~~~~~~~~~~~~~~~~~~~~~~~~~"
}

 
# main menu
mainmenu(){
	show_menus
	read_options
}



# service menu
servicemenu(){
	show_servicemenus
	read_serviceoptions
	}
	
	# service menu
startmenu(){
	show_startmenus
	read_startoptions
	}
	

 
# ----------------------------------------------
# Step #3: Trap CTRL+C, CTRL+Z and quit singles
# ----------------------------------------------
trap '' SIGINT SIGQUIT SIGTSTP
 
# -----------------------------------
# Step #4: Main logic - infinite loop
# ------------------------------------


	infosetup
	
